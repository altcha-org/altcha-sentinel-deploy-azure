{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteNamePrefix": {
            "type": "string",
            "defaultValue": "sentinel",
            "metadata": {
                "description": "The prefix for the App Service name (will be combined with random string)"
            }
        },
        "dockerRegistry": {
            "type": "string",
            "defaultValue": "ghcr.io",
            "metadata": {
                "description": "The Docker registry host (e.g., 'ghcr.io', 'docker.io')"
            }
        },
        "dockerRegistryUsername": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The Docker registry username."
            }
        },
        "dockerRegistryPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The Docker registry password."
            }
        },
        "dockerImage": {
            "type": "string",
            "defaultValue": "ghcr.io/altcha-org/sentinel:1.0.0",
            "metadata": {
                "description": "The Docker image to deploy (e.g., 'username/imagename:tag') without registry host"
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "[concat('st', uniqueString(resourceGroup().id))]",
            "metadata": {
                "description": "Name of the storage account for persistent volume"
            }
        },
        "fileShareName": {
            "type": "string",
            "defaultValue": "persistentdata",
            "metadata": {
                "description": "Name of the Azure Files share"
            }
        },
        "mountPath": {
            "type": "string",
            "defaultValue": "/data",
            "metadata": {
                "description": "Mount path in the container"
            }
        },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Location for all resources"
            }
        },
        "sku": {
            "type": "string",
            "defaultValue": "B2",
            "metadata": {
                "description": "The SKU of App Service Plan"
            }
        },
        "storageSKU": {
            "type": "string",
            "defaultValue": "Premium_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS",
                "Premium_LRS",
                "Premium_ZRS"
            ],
            "metadata": {
                "description": "The SKU of Storage Account"
            }
        }
    },
    "variables": {
        "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
        "fileShareId": "[concat(parameters('storageAccountName'), '/default/', parameters('fileShareName'))]",
        "uniqueSiteName": "[concat(parameters('siteNamePrefix'), '-', uniqueString(resourceGroup().id))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2022-09-01",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('storageSKU')]"
            },
            "kind": "FileStorage",
            "properties": {
                "supportsHttpsTrafficOnly": true
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts/fileServices/shares",
            "apiVersion": "2022-09-01",
            "name": "[concat(parameters('storageAccountName'), '/default/', parameters('fileShareName'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
            ],
            "properties": {
                "shareQuota": 100
            }
        },
        {
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2022-03-01",
            "name": "[concat(variables('uniqueSiteName'), '-asp')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('sku')]"
            },
            "properties": {
                "name": "[concat(variables('uniqueSiteName'), '-asp')]",
                "reserved": true
            },
            "kind": "linux"
        },
        {
            "type": "Microsoft.Web/sites",
            "apiVersion": "2022-03-01",
            "name": "[variables('uniqueSiteName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', concat(variables('uniqueSiteName'), '-asp'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts/fileServices/shares', parameters('storageAccountName'), 'default', parameters('fileShareName'))]"
            ],
            "kind": "app,linux,container",
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', concat(variables('uniqueSiteName'), '-asp'))]",
                "siteConfig": {
                    "linuxFxVersion": "[concat('DOCKER|', parameters('dockerImage'))]",
                    "healthCheckPath": "/v1/ping",
                    "appSettings": [
                        {
                            "name": "ARRAffinity",
                            "value": "false"
                        },
                        {
                            "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
                            "value": "false"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_URL",
                            "value": "[concat('https://', parameters('dockerRegistry'))]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_USERNAME",
                            "value": "[parameters('dockerRegistryUsername')]"
                        },
                        {
                            "name": "DOCKER_REGISTRY_SERVER_PASSWORD",
                            "value": "[parameters('dockerRegistryPassword')]"
                        }
                    ],
                    "azureStorageAccounts": {
                        "sentinel-data": {
                            "type": "AzureFiles",
                            "accountName": "[parameters('storageAccountName')]",
                            "shareName": "[parameters('fileShareName')]",
                            "accessKey": "[listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), '2022-09-01').keys[0].value]",
                            "mountPath": "[parameters('mountPath')]"
                        }
                    }
                },
                "httpsOnly": true
            }
        }
    ],
    "outputs": {
        "appServiceName": {
            "type": "string",
            "value": "[variables('uniqueSiteName')]"
        },
        "appServiceUrl": {
            "type": "string",
            "value": "[concat('https://', variables('uniqueSiteName'), '.azurewebsites.net')]"
        },
        "storageAccountName": {
            "type": "string",
            "value": "[parameters('storageAccountName')]"
        },
        "fileShareName": {
            "type": "string",
            "value": "[parameters('fileShareName')]"
        }
    }
}